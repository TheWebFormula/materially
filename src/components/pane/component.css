:host {
  grid-area: main;
  position: relative;
  display: flex;
  flex: 1;
  padding: 16px;
  box-sizing: border-box;
  gap: 16px;
}

:host(.window-compact) {
  padding: 0;
}

:host(.top-app-bar-exists) {
  padding-top: 0;
}

:host([scroll]) {
  height: 100%;
}

::slotted(mc-pane) {
  max-width: 100%;
  padding: 16px;
  box-sizing: border-box;
  border-radius: var(--mc-shape-large);
  background-color: var(--mc-surface-container-color, var(--mc-surface));
  overflow: hidden;
}

::slotted(mc-pane[no-padding]) {
  padding: 0;
}

:host([scroll]) ::slotted(mc-pane) {
  height: 100%;
  overflow: auto;
}

/* TODO work out single pane full width */
:host(:not([resize])) ::slotted(mc-pane:not([fixed])) {
  flex: 1;
}

/* :host(:not([resize])) ::slotted(mc-pane:not([fixed])) {
  flex: 1;
}

:host([resize]) ::slotted(mc-pane:not([fixed])) {
  flex-grow: 1;
}

:host([resize]) ::slotted(mc-pane[fixed]) {
  max-width: max-content;
} */

:host([resize]) ::slotted(mc-pane[collapsible]:not([scroll])) {
  overflow: hidden;
}


.resize-handle {
  display: none;
}

:host([resize]) .resize-handle {
  cursor: col-resize;
  display: block;
  position: absolute;
  top: calc(50% - 28px);
  width: 24px;
  height: 56px;
  user-select: none;
}

:host([resize]) .resize-handle::before {
  content: '';
  display: block;
  width: 4px;
  height: 56px;
  border-radius: 2px;
  margin-left: 10px;
  background-color: var(--mc-outline);
}
