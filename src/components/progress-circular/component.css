:host {
  --mc-progress-circular-color-local: var(--mc-progress-circular-color, var(--mc-primary));
  --mc-progress-circular-width-local: var(--mc-progress-circular-width, 8.3333);

  display: inline-flex;
  width: 48px;
  height: 48px;
  position: relative;
  contain: strict;
  content-visibility: auto;
}

svg,
circle {
  position: absolute;
  inset: 0;
}

svg {
  transform: rotate(-90deg);
}

circle {
  cx: 50%;
  cy: 50%;
  r: calc((50 * (1 - var(--mc-progress-circular-width-local) / 100)) * 1%);
  fill: transparent;
  stroke-dasharray: 100;
  transform-origin: center;
  stroke-width: calc(var(--mc-progress-circular-width-local) * 1%);
}

.active-track {
  stroke: var(--mc-progress-circular-color-local);
}

:host(.on-filled) .active-track {
  stroke: var(--mc-on-primary);
}

:host(.on-filled-tonal) .active-track {
  stroke: var(--mc-on-secondary-container);
}

.inactive-track {
  stroke: var(--mc-surface-container-highest);
}

:host(:not([indeterminate])) .active-track {
  transition: stroke-dashoffset linear;
  transition-duration: var(--mc-progress-circular-transition-duration);
}

:host(:not([indeterminate])) .inactive-track {
  transition: transform linear, stroke-dashoffset linear;
  transition-duration: var(--mc-progress-circular-transition-duration);
}

:host([indeterminate]) .active-track {
  animation: circle-rotate;
  animation-duration: 2600ms;
  animation-timing-function: cubic-bezier(0.35, 0, 0.25, 1);
  animation-iteration-count: infinite;
}

:host([indeterminate]) .inactive-track {
  display: none;
}


:host([indeterminate]) svg {
  animation: linear-rotate 1000ms linear infinite;
}


@keyframes circle-rotate {
  0% {
    stroke-dashoffset: 90;
    transform: rotate(-92.2deg);
  }

  25% {
    stroke-dashoffset: 90;
  }

  50% {
    stroke-dashoffset: 20;
  }

  50.001% {
    stroke-dashoffset: 20;
  }

  75% {
    stroke-dashoffset: 20;
    transform: rotate(0);
  }

  75.001% {
    stroke-dashoffset: 20;
    transform: rotateX(180deg) rotate(72.2deg);
  }

  100% {
    stroke-dashoffset: 90;
    transform: rotateX(180deg) rotate(72.2deg);
  }
}

@keyframes linear-rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}
