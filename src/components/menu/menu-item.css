:host {
  --mc-menu-item-text-color-local: var(--mc-menu-item-text-color, var(--mc-on-surface));
  --mc-menu-selected-container-color-local: var(--mc-menu-item-selected-container-color, var(--mc-secondary-container));
  --mc-menu-selected-text-color-local: var(--mc-menu-item-selected-text-color, var(--mc-on-secondary-container));


  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  display: inline-flex;
  gap: 12px;
  padding: 12px 16px;
  position: relative;
  text-overflow: ellipsis;

  height: 48px;
  line-height: 48px;
  font-size: var(--mc-font-large-label-size);
  font-weight: var(--mc-font-large-label-weight);
  letter-spacing: var(--mc-font-large-label-tracking);
  color: var(--mc-menu-item-text-color-local);
  
  cursor: pointer;
  white-space: nowrap;
  outline: none;
  -webkit-tap-highlight-color: transparent;


  border-radius: none;
}

:host([disabled]) {
  pointer-events: none;
  opacity: 0.3;
}

button {
  border-radius: inherit;
  cursor: inherit;
  display: inline-flex;
  align-items: center;
  justify-content: flex-start;
  border: none;
  outline: none;
  -webkit-appearance: none;
  background: transparent;
  text-decoration: none;
  width: 100%;
  height: 100%;
  font: inherit;
  color: inherit;
  padding: 0;
  gap: 8px;
  pointer-events: none;
}

:host(.selected) {
  color: var(--mc-menu-selected-text-color-local);
  background-color: var(--mc-menu-selected-container-color-local);
}

:host(.filtered) {
  display: none;
  pointer-events: none;
}

.default-slot {
  display: inline;
}

.default-slot,
.text ::slotted(*) {
  overflow: hidden;
  text-overflow: ellipsis;
}

.text {
  display: flex;
  flex: 1;
  flex-direction: column;
  overflow: hidden;
}

slot  {
  pointer-events: none;
}

slot[name="start"],
slot[name="end"] {
  color: var(--mc-on-surface-variant);
}

/* .default-slot {
  flex: 1;
} */

::slotted(.drop-arrow) {
  position: absolute;
  transform: rotate(-90deg);
  right: 16px;
  top: 50%;
}


mc-state-layer {
  --mc-state-layer-hover-color: var(--mc-on-surface);
  --mc-state-layer-focus-color: var(--mc-on-surface);
  --mc-state-layer-ripple-color: var(--mc-on-surface);
}
